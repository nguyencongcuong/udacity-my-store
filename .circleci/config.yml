version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  browser-tools: circleci/browser-tools@1.4.0
  # different jobs are calles later in the workflows sections
jobs:
  # The test job
  test:
    working_directory: ~/project-name
    docker:
      - image: 'cimg/node:16.10-browsers'
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      # Install chrome
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore local dependencies from cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
      # Install project dependencies
      - run:
          name: Install local dependencies
          command: npm run frontend:install
      # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      # Test the source code
      - run:
          name: Testing
          command: npm run frontend:test
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: 'cimg/node:16.10-browsers'
    steps:
      # install node and checkout code
      - checkout
      - eb/setup
      - aws-cli/setup
      - checkout
      - run: node --version
      
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Test Frontend
          command: |
            npm run frontend:install
            npm run frontend:build

  # deploy step will run only after manual approval
  deploy:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install:
          node-version: '16.10'
      - eb/setup
      - aws-cli/setup
      - checkout
      - run:
          name: Deploy App
          command: |
            npm run frontend:deploy
            npm run backend:deploy

workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - main
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
